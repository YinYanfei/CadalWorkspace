package cn.cadal.rec.algo.sgd;

import java.io.*;
import java.util.Properties;
import java.util.Random;
import java.lang.Math;

public class LFM {
	public static void main(String[] args) throws Exception {
		
		input = new RandomAccessFile("E:/Recommendation/LFM/test.txt","r");
		line = input.readLine();
		String token[];
		int userId,itemId,sum = 0;
		Float rating,tmp,bias = 0F;
		while(line != null){
			token = line.split(" ");
			userId = Integer.parseInt(token[0]);
			itemId = Integer.parseInt(token[1]);
			rating = Float.parseFloat(token[2]);
			tmp = 0F;
			for(int i = 0; i < numLatent; i++)
				tmp += matrixUser[userId][i] * matrixItem[itemId][i];
			tmp -= rating;
			bias += tmp * tmp;
			sum++;
			line = input.readLine();
		}
		input.close();
		System.out.println(Math.sqrt(bias/sum));
		long endTime = System.currentTimeMillis();
		System.out.println("times = " + (endTime - startTime)/1000+"s");
		
		BufferedWriter log = new BufferedWriter(new FileWriter("E:/Recommendation/LFM/log.txt",true));
		line = "iters="+iters+" numLatent="+numLatent+" stepRate="+stepRate
				+" RMSE="+Math.sqrt(bias/sum)+" times="+(endTime - startTime)/1000+"s\n";
		log.write(line);
		log.close();
	}
}


