package cn.cadal.rec.priori;

import java.io.File;
import java.io.FileReader;
import java.util.Properties;

public class Configuration {
	private String CONFIGURATIONFILE = "priori.properties";
	
	/**
	 * Construct Functions
	 */
	public Configuration() {
	}
	public Configuration(String confFile) {
		this.CONFIGURATIONFILE = confFile;
	}
	
	public void ReadPropertyFile() {
		Properties props = new Properties();
		File propFile = new File(this.CONFIGURATIONFILE);
		
		if (propFile.exists()) {
			FileReader in;
			try {
				in = new FileReader(propFile);
				props.load(in);
				in.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		int numLatent = Integer.parseInt(props.getProperty("numLatent", "10")); //默认10个隐因子
		int numUserBlocks = Integer.parseInt(props.getProperty("numUserBlocks", "10"));
		int numItemBlocks = Integer.parseInt(props.getProperty("numItemBlocks", "10"));
		float userPenalty = Float.parseFloat(props.getProperty("userPenalty", "0.1"));
		float itemPenalty = Float.parseFloat(props.getProperty("itemPenalty", "0.1"));
		float initialStepSize = Float.parseFloat(props.getProperty("initialStepSize", "0.1"));//SGD迭代步长
		int maxTrainingIters = Integer.parseInt(props.getProperty("maxTrainingIters", "30"));//每个R(i,j)迭代30次

		long inputDelay = Long.parseLong(props.getProperty("inputDelay", "0"));
		boolean debug = Boolean.parseBoolean(props.getProperty("debug", "false"));		
	}
}
